{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Captain\\\\data\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = () => {\n  _s();\n\n  const [files, setFile] = useState([]);\n  const [filenames, setFilenames] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n  const [uploadProgress, setProgress] = useState(0);\n  const [zip, setZip] = useState([]);\n\n  const handleDrop = acceptedFiles => setFilenames(acceptedFiles.map(file => file.name));\n\n  const onChange = e => {\n    setFile(e.target.files);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    if (!uploadedFiles) {\n      setMessage('Select a file first');\n    } else {\n      for (var x = 0; x < files.length; x++) {\n        formData.append('file', files[x]);\n      }\n    }\n\n    try {\n      const res = await axios.post(\"/multiple\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n\n      if (Object.keys(files).length !== 0) {\n        setMessage('File Uploaded');\n        setZip(res.data.zip);\n        setUploadedFiles(res.data.results);\n      } else {\n        setMessage(\"File is required\");\n      }\n    } catch (err) {\n      if (err) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  const downloadZip = async () => {\n    axios({\n      url: zip,\n      method: 'GET',\n      responseType: \"blob\",\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onDownloadProgress: progressEvent => {\n        const percentage = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        setProgress(percentage);\n\n        if (percentage === 100) {\n          setTimeout(() => setProgress(0), 10000);\n        }\n      }\n    }).then(res => {\n      const Fileurl = window.URL.createObjectURL(new Blob([res.data]));\n      const filelink = document.createElement(\"a\");\n      filelink.href = Fileurl;\n      var filename = zip.substring(zip.lastIndexOf('/') + 1);\n      filename.toString();\n      filelink.setAttribute(\"download\", filename);\n      document.body.appendChild(filelink);\n      filelink.click();\n    }).catch(error => {\n      setMessage('There was an error downloading the image');\n      return [];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [message ? /*#__PURE__*/_jsxDEV(Message, {\n      msg: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: handleDrop,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n              className: \"dropzone\"\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n              type: \"file\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag'n'drop files, or click to select file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this), filenames]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: filenames.map(fileName => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: fileName\n            }, fileName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Compress Files to ZIP File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Progress, {\n              percentage: uploadProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-block btn-danger\",\n              onClick: downloadZip,\n              children: \"Download ZIP File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        percentage: uploadPercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\",\n        className: \"btn btn-primary btn-block mt-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Original\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: '50%'\n                },\n                src: file.filePath,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: '50%'\n                },\n                src: file.preview,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  width: '50%'\n                },\n                src: file.thumbnail,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"wztx4YMkdZngdTB6yo/l3iVND0I=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["C:/Users/Captain/data/frontend/src/components/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","axios","Dropzone","FileUpload","files","setFile","filenames","setFilenames","uploadedFiles","setUploadedFiles","message","setMessage","uploadPercentage","setUploadPercentage","uploadProgress","setProgress","zip","setZip","handleDrop","acceptedFiles","map","file","name","onChange","e","target","onSubmit","preventDefault","formData","FormData","x","length","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","Object","keys","data","results","err","response","msg","downloadZip","url","method","responseType","onDownloadProgress","percentage","then","Fileurl","window","URL","createObjectURL","Blob","filelink","document","createElement","href","filename","substring","lastIndexOf","toString","setAttribute","body","appendChild","click","catch","error","getRootProps","getInputProps","className","fileName","width","filePath","preview","thumbnail"],"mappings":"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","sourcesContent":["import React, { Fragment, useState} from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nconst FileUpload = () => {\r\n  const [files, setFile] = useState([]);\r\n  const [filenames, setFilenames] = useState([]);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n  const[ uploadProgress,setProgress]=useState(0);\r\n  const[zip,setZip]=useState([]);\r\n  \r\n   const handleDrop = acceptedFiles =>\r\n    setFilenames(acceptedFiles.map(file => file.name));\r\n    const onChange = e => {\r\n      setFile(e.target.files);\r\n    };\r\n    const onSubmit = async e =>{\r\n      e.preventDefault();\r\n      const formData = new FormData();\r\n      if (!uploadedFiles) {\r\n        setMessage('Select a file first');\r\n      }else{\r\n        for(var x = 0; x<files.length; x++) {\r\n          formData.append('file', files[x]);  \r\n      } \r\n    }\r\n    try {\r\n      const res = await axios.post(\"/multiple\", formData,{\r\n         headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n       \r\n        onUploadProgress: progressEvent => {\r\n          \r\n          setUploadPercentage(\r\n            \r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n  \r\n          // Clear percentage\r\n          setTimeout(() => setUploadPercentage(0), 10000);\r\n        }\r\n      \r\n      });\r\n      if (Object.keys(files).length !== 0) {\r\n        setMessage('File Uploaded');\r\n      setZip(res.data.zip);\r\n      setUploadedFiles(res.data.results)\r\n      } else {\r\n        setMessage(\"File is required\")\r\n      }\r\n      \r\n    } catch (err) {\r\n      if (err) {\r\n        setMessage('There was a problem with the server');\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n    }\r\n  }\r\n \r\n    const downloadZip = async ()  =>{\r\n      \r\n       axios({\r\n        url: zip,\r\n        method:'GET',\r\n        responseType: \"blob\",\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onDownloadProgress: progressEvent => {\r\n          const percentage = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          setProgress(percentage);\r\n          if (percentage === 100) {\r\n            setTimeout(() => setProgress(0), 10000);\r\n          }\r\n        }\r\n        })\r\n        .then(res => {\r\n          const Fileurl = window.URL.createObjectURL(new Blob([res.data]));\r\n          const filelink = document.createElement(\"a\");\r\n          filelink.href = Fileurl;\r\n          var filename = zip.substring(zip.lastIndexOf('/')+1);\r\n          filename.toString();\r\n          filelink.setAttribute(\"download\", filename); \r\n          document.body.appendChild(filelink);\r\n          filelink.click();\r\n          \r\n        })\r\n        .catch(error => {\r\n          setMessage('There was an error downloading the image');\r\n          return  [];\r\n        });\r\n    }\r\n    \r\n  return (\r\n    <Fragment>\r\n      \r\n      {message ? <Message msg={message} /> : null}\r\n      \r\n      <form onSubmit={onSubmit} >\r\n        <div>\r\n        <Dropzone onDrop={handleDrop}> \r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: \"dropzone\" })}>\r\n             \r\n            <input {...getInputProps()} \r\n            type=\"file\"\r\n           onChange={onChange}\r\n            /> \r\n            <p>Drag'n'drop files, or click to select file</p>\r\n\r\n            {filenames}  \r\n          </div> \r\n        )}  \r\n      </Dropzone>\r\n      \r\n      <div>\r\n        <ul>\r\n          {filenames.map(fileName => (\r\n            <li key={fileName}>{fileName}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n          <h1 className=\"text-center\">\r\n              Compress Files to ZIP File\r\n          </h1>\r\n         <div >\r\n         <Progress percentage={uploadProgress} />\r\n       \r\n                <button className=\"btn btn-block btn-danger\" onClick={downloadZip}> \r\n                 Download ZIP File\r\n                </button>\r\n                </div> \r\n            </div>  \r\n      \r\n      </div>\r\n      <Progress percentage={uploadPercentage} />\r\n      <input\r\n        type='submit'\r\n        value='Upload'\r\n        className='btn btn-primary btn-block mt-4' \r\n           \r\n        />\r\n      </form> \r\n     \r\n        <div className=\"image\">\r\n        <table className=\"image\">\r\n        <tr>\r\n          <th>Original</th>\r\n          <th>Preview</th>\r\n          <th>Thumbnail</th>\r\n         \r\n        </tr>\r\n        <tbody>\r\n        {uploadedFiles.map(file =>(\r\n          <tr>\r\n              <td><img style={{ width: '50%' }} src={file.filePath} alt='' /></td>\r\n              <td><img style={{ width: '50%' }} src={file.preview} alt='' /></td>\r\n              <td><img style={{ width: '50%' }} src={file.thumbnail} alt='' /></td>        \r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n          \r\n         </table>\r\n        \r\n        </div> \r\n\r\n    </Fragment>\r\n  );\r\n    \r\n};\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}